type Player {
    id: Int
    name: String
}

type Game {
    id: Int
    player_id: Int
    rounds: Int
    winner: String
}

input GameInput {
    player_id: Int
    rounds: [RoundInput]
}

type Round {
    id: Int
    human_choice: String
    computer_choice: String
    winner: String
}

input RoundInput {
    human_choice: String
    computer_choice: String
    winner: String
}

type Query {
    findAllPlayers: [Player]
    findGames(playerId: Int): [Game]
}

type Mutation {
    createPlayer(name: String!): Player
    createGame(gameEntity: GameInput!): Game
}